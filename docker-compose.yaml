version: '3.8'

services:
  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs


  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "device-movements:3:1, fraud_alerts:3:1, high_value_transactions:3:1"
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 10s
      timeout: 5s
      retries: 5


  device_movement_service:
    build:
      context: ./services/device_movement_service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_URI=redis://redis:6379
      - FLASK_APP=app.py
      - FLASK_ENV=development

  analysis-service:
    build:
      context: ./services/graph_analysis_service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    depends_on:
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_URI=redis://redis:6379
      - FLASK_APP=app.py
      - FLASK_ENV=development

  intelligence_service:
    build:
      context: ./services/intelligence_service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    depends_on:
      - neo4j
      - redis
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_URI=redis://redis:6379
      - FLASK_APP=app.py
      - FLASK_ENV=development

volumes:
    neo4j_data:
    neo4j_logs:
    redis_data:





